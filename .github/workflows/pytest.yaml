name: Tests

on:
  push:
  pull_request:

jobs:
  Tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        pycalphad_develop_version: [true, false]

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0  # fetch the entire repo history, required to guarantee setuptools_scm will pick up tags
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install -U pip setuptools
    - name: Install pycalphad development version
      if: matrix.pycalphad_develop_version
      run: python -m pip install git+https://github.com/pycalphad/pycalphad.git@develop
    - name: Save pycalphad version
      run: |
        echo "PYCALPHAD_VERSION=$(python -c "from importlib.metadata import version;print(version('pycalphad'))")" >> $GITHUB_ENV
    - run: python -m pip install build
    - run: python -m build --wheel
    - run: python -m pip install dist/*.whl
    - run: python -m pip install pytest
    - run: python -m pip list
    # pytest:
    # - The `--import-mode=append` and `--pyargs kawin` flags test the installed package over the local one
    # - The `--cov` flag is required to turn on coverage
    - run: pytest -v --import-mode=append --cov --cov-config=pyproject.toml --pyargs kawin
    - run: coverage xml
    - uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python-version }}-pycalphad-${{ env.PYCALPHAD_VERSION }}
        path: coverage.xml

  Upload-Coverage:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      # The source code _must_ be checked out for coverage to be processed at Codecov.
      - uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: coverage-*
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true
